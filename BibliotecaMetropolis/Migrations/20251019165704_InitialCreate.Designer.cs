// <auto-generated />
using System;
using BibliotecaMetropolis.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliotecaMetropolis.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20251019165704_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaMetropolis.Models.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAutor"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAutor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.AutoresRecursos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<int>("IdRec")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAutor");

                    b.HasIndex("IdRec");

                    b.ToTable("AutoresRecursos");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Editorial", b =>
                {
                    b.Property<int>("IdEdit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEdit"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEdit");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Etiqueta", b =>
                {
                    b.Property<int>("IdEtiqueta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEtiqueta"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEtiqueta");

                    b.ToTable("Etiquetas");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPais"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPais");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Recurso", b =>
                {
                    b.Property<int>("IdRec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRec"));

                    b.Property<int>("AnnoPublic")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edicion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEdit")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("InstitucionEducativa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PalabrasBusqueda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoRecurso")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRec");

                    b.HasIndex("IdEdit");

                    b.HasIndex("IdPais");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.RecursoEtiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEtiqueta")
                        .HasColumnType("int");

                    b.Property<int>("IdRec")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEtiqueta");

                    b.HasIndex("IdRec");

                    b.ToTable("RecursoEtiquetas");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.AutoresRecursos", b =>
                {
                    b.HasOne("BibliotecaMetropolis.Models.Autor", "Autor")
                        .WithMany("AutoresRecursos")
                        .HasForeignKey("IdAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaMetropolis.Models.Recurso", "Recurso")
                        .WithMany("AutoresRecursos")
                        .HasForeignKey("IdRec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Recurso", b =>
                {
                    b.HasOne("BibliotecaMetropolis.Models.Editorial", "Editorial")
                        .WithMany("Recursos")
                        .HasForeignKey("IdEdit");

                    b.HasOne("BibliotecaMetropolis.Models.Pais", "Pais")
                        .WithMany("Recursos")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.RecursoEtiqueta", b =>
                {
                    b.HasOne("BibliotecaMetropolis.Models.Etiqueta", "Etiqueta")
                        .WithMany("RecursoEtiquetas")
                        .HasForeignKey("IdEtiqueta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaMetropolis.Models.Recurso", "Recurso")
                        .WithMany("RecursoEtiquetas")
                        .HasForeignKey("IdRec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etiqueta");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Autor", b =>
                {
                    b.Navigation("AutoresRecursos");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Editorial", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Etiqueta", b =>
                {
                    b.Navigation("RecursoEtiquetas");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Pais", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("BibliotecaMetropolis.Models.Recurso", b =>
                {
                    b.Navigation("AutoresRecursos");

                    b.Navigation("RecursoEtiquetas");
                });
#pragma warning restore 612, 618
        }
    }
}
